@using Microsoft.AspNetCore.Components.Services
@using Onlab.Client.ViewModels
@using Onlab.Client.Layouts

@inherits UserBaseComponent
@inject HttpClient Http;
@inject IUriHelper UriHelper;

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Onlab</a>
    <button class="navbar-toggler" onclick="@ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div></div>

<div class="@NavMenuCssClass" onclick="@ToggleNavMenu">
    <ul class="nav flex-column">
        @if (User != null && User.IsSignedIn)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <button class="nav-link" onclick="@Logout">
                    Szia @User.Name!
                    Kijelentkezés
                </button>
            </li>
        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-person" aria-hidden="true"></span> Bejelentkezés
                </NavLink>
            </li>
        }
    </ul>
</div>

@functions {
    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    async Task Logout()
    {
        User = await Http.GetJsonAsync<CurrentUserViewModel>("api/Login/Logout");
        UriHelper.NavigateTo("/");
    }

    protected override async Task OnInitAsync()
    {
        User = await Http.GetJsonAsync<CurrentUserViewModel>("api/User/CurrentUser");
    }
}
